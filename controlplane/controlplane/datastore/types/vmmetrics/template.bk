# AUTOGENERATED FILE DO NOT EDIT

from typing import cast

from sqlalchemy.dialects.postgresql import JSONB
from sqlalchemy.orm import Mapped, mapped_column
from controlplane.datastore.types.vmmetrics.metric import (
    MetricBaseORM,
    MetricLatestBaseORM,
    MetricBaseModel,
    MetricLatestBaseModel,
)


metric_name = "METRIC_NAME_LOWERCASE"
# example METRIC_NAME_LOWERCASE metrics: #EXAMPLE_METRICS
metric_shape_db = METRIC_SHAPE_DB


# Custom Types
#CUSTOMTYPES


# Convert metrics column in DB to additional object fields
#CONVERT


class METRIC_NAME_CAMELCASEMetricLatestORM(MetricLatestBaseORM):
    __tablename__ = f"machine_metric_METRIC_NAME_LOWERCASE_latest"
    metrics: Mapped[METRIC_SHAPE_DB] = mapped_column(JSONB, nullable=False)


class METRIC_NAME_CAMELCASEMetricORM(MetricBaseORM):
    __tablename__ = f"machine_metric_METRIC_NAME_LOWERCASE"
    metrics: Mapped[METRIC_SHAPE_DB] = mapped_column(JSONB, nullable=False)


class METRIC_NAME_CAMELCASEMetricLatest(MetricLatestBaseModel):
#METRIC_OBJ_FIELDS
    @classmethod
    def from_orm(cls, orm: METRIC_NAME_CAMELCASEMetricLatestORM, **kwargs) -> "METRIC_NAME_CAMELCASEMetricLatest":
        instance = super().from_orm(orm=orm, **convert(orm.metrics))
        return cast(METRIC_NAME_CAMELCASEMetricLatest, instance)


class METRIC_NAME_CAMELCASEMetric(MetricBaseModel):
#METRIC_OBJ_FIELDS
    @classmethod
    def from_orm(cls, orm: METRIC_NAME_CAMELCASEMetricORM, **kwargs) -> "METRIC_NAME_CAMELCASEMetric":
        instance = super().from_orm(orm=orm, **convert(orm.metrics))
        return cast(METRIC_NAME_CAMELCASEMetric, instance)
