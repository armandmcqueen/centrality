{
  "openapi": "3.1.0",
  "info": {
    "title": "centrality-controlplane",
    "version": "0.0.1"
  },
  "paths": {
    "/healthz": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Healthcheck",
        "description": "Basic healthcheck",
        "operationId": "get_healthcheck",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          }
        }
      }
    },
    "/healthz/auth": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Auth Healthcheck",
        "description": "Basic healthcheck that requires authentication",
        "operationId": "get_auth_healthcheck",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/info": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Info",
        "description": "Return basic info about deployment",
        "operationId": "get_info",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/machine/{machine_id}/register": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Register Machine",
        "description": "Register a VM",
        "operationId": "register_machine",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Machine Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineRegistrationInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/{machine_id}/heartbeat": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Report Machine Heartbeat",
        "description": "Report a heartbeat for a VM",
        "operationId": "report_machine_heartbeat",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Machine Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/{machine_id}/report-death": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Report Machine Death",
        "description": "Report that a VM is dead, so that it is removed immediately.\n\nThis can be useful when you need the live list to update faster than the timeout.",
        "operationId": "report_machine_death",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Machine Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/live": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Live Machines",
        "description": "Return a list of the active VMs",
        "operationId": "get_live_machines",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MachineInfo"
                  },
                  "type": "array",
                  "title": "Response Get Live Machines Machine Live Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/machine/{machine_id}": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Machine",
        "description": "Return",
        "operationId": "get_machine",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Machine Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/cpu": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Cpu Metrics",
        "description": "Get cpu metrics for certain VMs between from_ts to to_ts, inclusive.\n:param machine_ids: A list of VM ids to get metrics for. Empty list returns no results (but not an error).\n:param from_ts: Start time filter, inclusive. Optional.\n:param to_ts: End time filter, inclusive. Optional. If to_ts is before from_ts, there will not be an\n              error, but the results will be empty.\n:return: List of CpuMeasurement objects",
        "operationId": "get_cpu_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          },
          {
            "name": "from_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Ts"
            }
          },
          {
            "name": "to_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Ts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CpuMeasurement"
                  },
                  "title": "Response Get Cpu Metrics Machine Metrics Cpu Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Put Cpu Metric",
        "description": "Put a cpu metric measurement into the datastore",
        "operationId": "put_cpu_metric",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CpuMeasurement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/cpu/latest": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Latest Cpu Metrics",
        "description": "Get the most recent cpu measurements for each VM",
        "operationId": "get_latest_cpu_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CpuMeasurement"
                  },
                  "title": "Response Get Latest Cpu Metrics Machine Metrics Cpu Latest Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/disk-iops": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Disk Iops Metrics",
        "description": "Get disk_iops metrics for certain VMs between from_ts to to_ts, inclusive.\n:param machine_ids: A list of VM ids to get metrics for. Empty list returns no results (but not an error).\n:param from_ts: Start time filter, inclusive. Optional.\n:param to_ts: End time filter, inclusive. Optional. If to_ts is before from_ts, there will not be an\n              error, but the results will be empty.\n:return: List of DiskIopsMeasurement objects",
        "operationId": "get_disk_iops_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          },
          {
            "name": "from_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Ts"
            }
          },
          {
            "name": "to_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Ts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiskIopsMeasurement"
                  },
                  "title": "Response Get Disk Iops Metrics Machine Metrics Disk Iops Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Put Disk Iops Metric",
        "description": "Put a disk_iops metric measurement into the datastore",
        "operationId": "put_disk_iops_metric",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiskIopsMeasurement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/disk-iops/latest": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Latest Disk Iops Metrics",
        "description": "Get the most recent disk_iops measurements for each VM",
        "operationId": "get_latest_disk_iops_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiskIopsMeasurement"
                  },
                  "title": "Response Get Latest Disk Iops Metrics Machine Metrics Disk Iops Latest Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/disk-usage": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Disk Usage Metrics",
        "description": "Get disk_usage metrics for certain VMs between from_ts to to_ts, inclusive.\n:param machine_ids: A list of VM ids to get metrics for. Empty list returns no results (but not an error).\n:param from_ts: Start time filter, inclusive. Optional.\n:param to_ts: End time filter, inclusive. Optional. If to_ts is before from_ts, there will not be an\n              error, but the results will be empty.\n:return: List of DiskUsageMeasurement objects",
        "operationId": "get_disk_usage_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          },
          {
            "name": "from_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Ts"
            }
          },
          {
            "name": "to_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Ts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiskUsageMeasurement"
                  },
                  "title": "Response Get Disk Usage Metrics Machine Metrics Disk Usage Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Put Disk Usage Metric",
        "description": "Put a disk_usage metric measurement into the datastore",
        "operationId": "put_disk_usage_metric",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiskUsageMeasurement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/disk-usage/latest": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Latest Disk Usage Metrics",
        "description": "Get the most recent disk_usage measurements for each VM",
        "operationId": "get_latest_disk_usage_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiskUsageMeasurement"
                  },
                  "title": "Response Get Latest Disk Usage Metrics Machine Metrics Disk Usage Latest Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/disk-throughput": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Disk Throughput Metrics",
        "description": "Get disk_throughput metrics for certain VMs between from_ts to to_ts, inclusive.\n:param machine_ids: A list of VM ids to get metrics for. Empty list returns no results (but not an error).\n:param from_ts: Start time filter, inclusive. Optional.\n:param to_ts: End time filter, inclusive. Optional. If to_ts is before from_ts, there will not be an\n              error, but the results will be empty.\n:return: List of DiskThroughputMeasurement objects",
        "operationId": "get_disk_throughput_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          },
          {
            "name": "from_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Ts"
            }
          },
          {
            "name": "to_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Ts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiskThroughputMeasurement"
                  },
                  "title": "Response Get Disk Throughput Metrics Machine Metrics Disk Throughput Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Put Disk Throughput Metric",
        "description": "Put a disk_throughput metric measurement into the datastore",
        "operationId": "put_disk_throughput_metric",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiskThroughputMeasurement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/disk-throughput/latest": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Latest Disk Throughput Metrics",
        "description": "Get the most recent disk_throughput measurements for each VM",
        "operationId": "get_latest_disk_throughput_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiskThroughputMeasurement"
                  },
                  "title": "Response Get Latest Disk Throughput Metrics Machine Metrics Disk Throughput Latest Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/gpu-memory": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Gpu Memory Metrics",
        "description": "Get gpu_memory metrics for certain VMs between from_ts to to_ts, inclusive.\n:param machine_ids: A list of VM ids to get metrics for. Empty list returns no results (but not an error).\n:param from_ts: Start time filter, inclusive. Optional.\n:param to_ts: End time filter, inclusive. Optional. If to_ts is before from_ts, there will not be an\n              error, but the results will be empty.\n:return: List of GpuMemoryMeasurement objects",
        "operationId": "get_gpu_memory_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          },
          {
            "name": "from_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Ts"
            }
          },
          {
            "name": "to_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Ts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GpuMemoryMeasurement"
                  },
                  "title": "Response Get Gpu Memory Metrics Machine Metrics Gpu Memory Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Put Gpu Memory Metric",
        "description": "Put a gpu_memory metric measurement into the datastore",
        "operationId": "put_gpu_memory_metric",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GpuMemoryMeasurement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/gpu-memory/latest": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Latest Gpu Memory Metrics",
        "description": "Get the most recent gpu_memory measurements for each VM",
        "operationId": "get_latest_gpu_memory_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GpuMemoryMeasurement"
                  },
                  "title": "Response Get Latest Gpu Memory Metrics Machine Metrics Gpu Memory Latest Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/gpu-utilization": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Gpu Utilization Metrics",
        "description": "Get gpu_utilization metrics for certain VMs between from_ts to to_ts, inclusive.\n:param machine_ids: A list of VM ids to get metrics for. Empty list returns no results (but not an error).\n:param from_ts: Start time filter, inclusive. Optional.\n:param to_ts: End time filter, inclusive. Optional. If to_ts is before from_ts, there will not be an\n              error, but the results will be empty.\n:return: List of GpuUtilizationMeasurement objects",
        "operationId": "get_gpu_utilization_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          },
          {
            "name": "from_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Ts"
            }
          },
          {
            "name": "to_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Ts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GpuUtilizationMeasurement"
                  },
                  "title": "Response Get Gpu Utilization Metrics Machine Metrics Gpu Utilization Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Put Gpu Utilization Metric",
        "description": "Put a gpu_utilization metric measurement into the datastore",
        "operationId": "put_gpu_utilization_metric",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GpuUtilizationMeasurement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/gpu-utilization/latest": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Latest Gpu Utilization Metrics",
        "description": "Get the most recent gpu_utilization measurements for each VM",
        "operationId": "get_latest_gpu_utilization_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GpuUtilizationMeasurement"
                  },
                  "title": "Response Get Latest Gpu Utilization Metrics Machine Metrics Gpu Utilization Latest Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/memory": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Memory Metrics",
        "description": "Get memory metrics for certain VMs between from_ts to to_ts, inclusive.\n:param machine_ids: A list of VM ids to get metrics for. Empty list returns no results (but not an error).\n:param from_ts: Start time filter, inclusive. Optional.\n:param to_ts: End time filter, inclusive. Optional. If to_ts is before from_ts, there will not be an\n              error, but the results will be empty.\n:return: List of MemoryMeasurement objects",
        "operationId": "get_memory_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          },
          {
            "name": "from_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Ts"
            }
          },
          {
            "name": "to_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Ts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemoryMeasurement"
                  },
                  "title": "Response Get Memory Metrics Machine Metrics Memory Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Put Memory Metric",
        "description": "Put a memory metric measurement into the datastore",
        "operationId": "put_memory_metric",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemoryMeasurement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/memory/latest": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Latest Memory Metrics",
        "description": "Get the most recent memory measurements for each VM",
        "operationId": "get_latest_memory_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemoryMeasurement"
                  },
                  "title": "Response Get Latest Memory Metrics Machine Metrics Memory Latest Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/network-throughput": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Network Throughput Metrics",
        "description": "Get network_throughput metrics for certain VMs between from_ts to to_ts, inclusive.\n:param machine_ids: A list of VM ids to get metrics for. Empty list returns no results (but not an error).\n:param from_ts: Start time filter, inclusive. Optional.\n:param to_ts: End time filter, inclusive. Optional. If to_ts is before from_ts, there will not be an\n              error, but the results will be empty.\n:return: List of NetworkThroughputMeasurement objects",
        "operationId": "get_network_throughput_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          },
          {
            "name": "from_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Ts"
            }
          },
          {
            "name": "to_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Ts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkThroughputMeasurement"
                  },
                  "title": "Response Get Network Throughput Metrics Machine Metrics Network Throughput Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Put Network Throughput Metric",
        "description": "Put a network_throughput metric measurement into the datastore",
        "operationId": "put_network_throughput_metric",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkThroughputMeasurement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/network-throughput/latest": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Latest Network Throughput Metrics",
        "description": "Get the most recent network_throughput measurements for each VM",
        "operationId": "get_latest_network_throughput_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkThroughputMeasurement"
                  },
                  "title": "Response Get Latest Network Throughput Metrics Machine Metrics Network Throughput Latest Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/nvidia-smi": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Nvidia Smi Metrics",
        "description": "Get nvidia_smi metrics for certain VMs between from_ts to to_ts, inclusive.\n:param machine_ids: A list of VM ids to get metrics for. Empty list returns no results (but not an error).\n:param from_ts: Start time filter, inclusive. Optional.\n:param to_ts: End time filter, inclusive. Optional. If to_ts is before from_ts, there will not be an\n              error, but the results will be empty.\n:return: List of NvidiaSmiMeasurement objects",
        "operationId": "get_nvidia_smi_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          },
          {
            "name": "from_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Ts"
            }
          },
          {
            "name": "to_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Ts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NvidiaSmiMeasurement"
                  },
                  "title": "Response Get Nvidia Smi Metrics Machine Metrics Nvidia Smi Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Put Nvidia Smi Metric",
        "description": "Put a nvidia_smi metric measurement into the datastore",
        "operationId": "put_nvidia_smi_metric",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NvidiaSmiMeasurement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/machine/metrics/nvidia-smi/latest": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Latest Nvidia Smi Metrics",
        "description": "Get the most recent nvidia_smi measurements for each VM",
        "operationId": "get_latest_nvidia_smi_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Machine Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NvidiaSmiMeasurement"
                  },
                  "title": "Response Get Latest Nvidia Smi Metrics Machine Metrics Nvidia Smi Latest Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CpuMeasurement": {
        "properties": {
          "machine_id": {
            "type": "string",
            "title": "Machine Id"
          },
          "ts": {
            "type": "string",
            "format": "date-time",
            "title": "Ts"
          },
          "cpu_percents": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Cpu Percents"
          }
        },
        "type": "object",
        "required": [
          "machine_id",
          "ts",
          "cpu_percents"
        ],
        "title": "CpuMeasurement",
        "description": "A measurement of Cpu"
      },
      "DiskIops": {
        "properties": {
          "disk_name": {
            "type": "string",
            "title": "Disk Name"
          },
          "iops": {
            "type": "number",
            "title": "Iops"
          }
        },
        "type": "object",
        "required": [
          "disk_name",
          "iops"
        ],
        "title": "DiskIops"
      },
      "DiskIopsMeasurement": {
        "properties": {
          "machine_id": {
            "type": "string",
            "title": "Machine Id"
          },
          "ts": {
            "type": "string",
            "format": "date-time",
            "title": "Ts"
          },
          "iops": {
            "items": {
              "$ref": "#/components/schemas/DiskIops"
            },
            "type": "array",
            "title": "Iops"
          }
        },
        "type": "object",
        "required": [
          "machine_id",
          "ts",
          "iops"
        ],
        "title": "DiskIopsMeasurement",
        "description": "A measurement of DiskIops"
      },
      "DiskThroughput": {
        "properties": {
          "disk_name": {
            "type": "string",
            "title": "Disk Name"
          },
          "read_mbps": {
            "type": "number",
            "title": "Read Mbps"
          },
          "write_mbps": {
            "type": "number",
            "title": "Write Mbps"
          }
        },
        "type": "object",
        "required": [
          "disk_name",
          "read_mbps",
          "write_mbps"
        ],
        "title": "DiskThroughput"
      },
      "DiskThroughputMeasurement": {
        "properties": {
          "machine_id": {
            "type": "string",
            "title": "Machine Id"
          },
          "ts": {
            "type": "string",
            "format": "date-time",
            "title": "Ts"
          },
          "throughput": {
            "items": {
              "$ref": "#/components/schemas/DiskThroughput"
            },
            "type": "array",
            "title": "Throughput"
          }
        },
        "type": "object",
        "required": [
          "machine_id",
          "ts",
          "throughput"
        ],
        "title": "DiskThroughputMeasurement",
        "description": "A measurement of DiskThroughput"
      },
      "DiskUsage": {
        "properties": {
          "disk_name": {
            "type": "string",
            "title": "Disk Name"
          },
          "used_mb": {
            "type": "number",
            "title": "Used Mb"
          },
          "total_mb": {
            "type": "number",
            "title": "Total Mb"
          }
        },
        "type": "object",
        "required": [
          "disk_name",
          "used_mb",
          "total_mb"
        ],
        "title": "DiskUsage"
      },
      "DiskUsageMeasurement": {
        "properties": {
          "machine_id": {
            "type": "string",
            "title": "Machine Id"
          },
          "ts": {
            "type": "string",
            "format": "date-time",
            "title": "Ts"
          },
          "usage": {
            "items": {
              "$ref": "#/components/schemas/DiskUsage"
            },
            "type": "array",
            "title": "Usage"
          }
        },
        "type": "object",
        "required": [
          "machine_id",
          "ts",
          "usage"
        ],
        "title": "DiskUsageMeasurement",
        "description": "A measurement of DiskUsage"
      },
      "GpuMemory": {
        "properties": {
          "used_mb": {
            "type": "number",
            "title": "Used Mb"
          },
          "total_mb": {
            "type": "number",
            "title": "Total Mb"
          }
        },
        "type": "object",
        "required": [
          "used_mb",
          "total_mb"
        ],
        "title": "GpuMemory"
      },
      "GpuMemoryMeasurement": {
        "properties": {
          "machine_id": {
            "type": "string",
            "title": "Machine Id"
          },
          "ts": {
            "type": "string",
            "format": "date-time",
            "title": "Ts"
          },
          "memory": {
            "items": {
              "$ref": "#/components/schemas/GpuMemory"
            },
            "type": "array",
            "title": "Memory"
          }
        },
        "type": "object",
        "required": [
          "machine_id",
          "ts",
          "memory"
        ],
        "title": "GpuMemoryMeasurement",
        "description": "A measurement of GpuMemory"
      },
      "GpuUtilizationMeasurement": {
        "properties": {
          "machine_id": {
            "type": "string",
            "title": "Machine Id"
          },
          "ts": {
            "type": "string",
            "format": "date-time",
            "title": "Ts"
          },
          "gpu_percents": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Gpu Percents"
          }
        },
        "type": "object",
        "required": [
          "machine_id",
          "ts",
          "gpu_percents"
        ],
        "title": "GpuUtilizationMeasurement",
        "description": "A measurement of GpuUtilization"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InfoResponse": {
        "properties": {
          "git_commit": {
            "type": "string",
            "title": "Git Commit"
          },
          "git_branch": {
            "type": "string",
            "title": "Git Branch"
          },
          "git_is_dirty": {
            "type": "boolean",
            "title": "Git Is Dirty"
          },
          "deploy_time": {
            "type": "string",
            "format": "date-time",
            "title": "Deploy Time"
          }
        },
        "type": "object",
        "required": [
          "git_commit",
          "git_branch",
          "git_is_dirty",
          "deploy_time"
        ],
        "title": "InfoResponse"
      },
      "MachineInfo": {
        "properties": {
          "machine_id": {
            "type": "string",
            "title": "Machine Id"
          },
          "last_heartbeat_ts": {
            "type": "string",
            "format": "date-time",
            "title": "Last Heartbeat Ts"
          },
          "registration_ts": {
            "type": "string",
            "format": "date-time",
            "title": "Registration Ts"
          },
          "num_cpus": {
            "type": "integer",
            "title": "Num Cpus"
          },
          "cpu_description": {
            "type": "string",
            "title": "Cpu Description"
          },
          "host_memory_mb": {
            "type": "integer",
            "title": "Host Memory Mb"
          },
          "num_gpus": {
            "type": "integer",
            "title": "Num Gpus"
          },
          "gpu_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gpu Type"
          },
          "gpu_memory_mb": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gpu Memory Mb"
          },
          "nvidia_driver_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nvidia Driver Version"
          },
          "hostname": {
            "type": "string",
            "title": "Hostname"
          }
        },
        "type": "object",
        "required": [
          "machine_id",
          "last_heartbeat_ts",
          "registration_ts",
          "num_cpus",
          "cpu_description",
          "host_memory_mb",
          "num_gpus",
          "gpu_type",
          "gpu_memory_mb",
          "nvidia_driver_version",
          "hostname"
        ],
        "title": "MachineInfo",
        "description": "Information about a VM's current state"
      },
      "MachineRegistrationInfo": {
        "properties": {
          "num_cpus": {
            "type": "integer",
            "title": "Num Cpus"
          },
          "cpu_description": {
            "type": "string",
            "title": "Cpu Description"
          },
          "host_memory_mb": {
            "type": "integer",
            "title": "Host Memory Mb"
          },
          "num_gpus": {
            "type": "integer",
            "title": "Num Gpus"
          },
          "gpu_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gpu Type"
          },
          "gpu_memory_mb": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gpu Memory Mb"
          },
          "nvidia_driver_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nvidia Driver Version"
          },
          "hostname": {
            "type": "string",
            "title": "Hostname"
          }
        },
        "type": "object",
        "required": [
          "num_cpus",
          "cpu_description",
          "host_memory_mb",
          "num_gpus",
          "gpu_type",
          "gpu_memory_mb",
          "nvidia_driver_version",
          "hostname"
        ],
        "title": "MachineRegistrationInfo",
        "description": "Information about a VM to register with the control plane.\n\nSame as VM heartbeat, but without a few fields that are either set via URL params or\nautomatically set server-side."
      },
      "MemoryMeasurement": {
        "properties": {
          "machine_id": {
            "type": "string",
            "title": "Machine Id"
          },
          "ts": {
            "type": "string",
            "format": "date-time",
            "title": "Ts"
          },
          "free_memory_mb": {
            "type": "number",
            "title": "Free Memory Mb"
          },
          "total_memory_mb": {
            "type": "number",
            "title": "Total Memory Mb"
          }
        },
        "type": "object",
        "required": [
          "machine_id",
          "ts",
          "free_memory_mb",
          "total_memory_mb"
        ],
        "title": "MemoryMeasurement",
        "description": "A measurement of Memory"
      },
      "NetworkThroughputMeasurement": {
        "properties": {
          "machine_id": {
            "type": "string",
            "title": "Machine Id"
          },
          "ts": {
            "type": "string",
            "format": "date-time",
            "title": "Ts"
          },
          "per_interface": {
            "items": {
              "$ref": "#/components/schemas/Throughput"
            },
            "type": "array",
            "title": "Per Interface"
          },
          "total": {
            "$ref": "#/components/schemas/Throughput"
          }
        },
        "type": "object",
        "required": [
          "machine_id",
          "ts",
          "per_interface",
          "total"
        ],
        "title": "NetworkThroughputMeasurement",
        "description": "A measurement of NetworkThroughput"
      },
      "NvidiaSmiMeasurement": {
        "properties": {
          "machine_id": {
            "type": "string",
            "title": "Machine Id"
          },
          "ts": {
            "type": "string",
            "format": "date-time",
            "title": "Ts"
          },
          "output": {
            "type": "string",
            "title": "Output"
          }
        },
        "type": "object",
        "required": [
          "machine_id",
          "ts",
          "output"
        ],
        "title": "NvidiaSmiMeasurement",
        "description": "A measurement of NvidiaSmi"
      },
      "OkResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "default": "ok"
          }
        },
        "type": "object",
        "title": "OkResponse"
      },
      "Throughput": {
        "properties": {
          "interface_name": {
            "type": "string",
            "title": "Interface Name"
          },
          "sent_mbps": {
            "type": "number",
            "title": "Sent Mbps"
          },
          "recv_mbps": {
            "type": "number",
            "title": "Recv Mbps"
          }
        },
        "type": "object",
        "required": [
          "interface_name",
          "sent_mbps",
          "recv_mbps"
        ],
        "title": "Throughput"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}

