{
  "openapi": "3.1.0",
  "info": {
    "title": "centrality-controlplane",
    "version": "0.0.1"
  },
  "paths": {
    "/healthz": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Healthcheck",
        "description": "Basic healthcheck",
        "operationId": "get_healthcheck",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          }
        }
      }
    },
    "/healthz/auth": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Auth Healthcheck",
        "description": "Basic healthcheck that requires authentication",
        "operationId": "get_auth_healthcheck",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/info": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Info",
        "description": "Return basic info about deployment",
        "operationId": "get_info",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metrics/cpu": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Cpu Metrics",
        "description": "Get cpu metrics for certain VMs between from_ts to to_ts, inclusive.\n:param vm_ids: A list of VM ids to get metrics for. Empty list returns no results (but not an error).\n:param from_ts: Start time filter, inclusive. Optional.\n:param to_ts: End time filter, inclusive. Optional. If to_ts is before from_ts, there will not be an\n              error, but the results will be empty.\n:return: List of CpuMeasurement objects",
        "operationId": "get_cpu_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "vm_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Vm Ids"
            }
          },
          {
            "name": "from_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Ts"
            }
          },
          {
            "name": "to_ts",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Ts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CpuMeasurement"
                  },
                  "title": "Response Get Cpu Metrics Metrics Cpu Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Put Cpu Metric",
        "description": "Put a cpu metric measurement into the datastore",
        "operationId": "put_cpu_metric",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CpuMeasurement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/metrics/cpu/latest": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Get Latest Cpu Metrics",
        "description": "Get the most recent CPU measurements for each VM",
        "operationId": "get_latest_cpu_metrics",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "vm_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Vm Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CpuMeasurement"
                  },
                  "title": "Response Get Latest Cpu Metrics Metrics Cpu Latest Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vm/{vm_id}/heartbeat": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Report Vm Heartbeat",
        "description": "Report a heartbeat for a VM",
        "operationId": "report_vm_heartbeat",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "vm_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vm Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vm/{vm_id}/death": {
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Report Vm Death",
        "description": "Report that a VM is dead, so that it is removed immediately rather than just timing out",
        "operationId": "report_vm_death",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "vm_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vm Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vm/live": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "List Live Vms",
        "description": "Return a list of the active VMs",
        "operationId": "list_live_vms",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response List Live Vms Vm Live Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CpuMeasurement": {
        "properties": {
          "vm_id": {
            "type": "string",
            "title": "Vm Id"
          },
          "ts": {
            "type": "string",
            "format": "date-time",
            "title": "Ts"
          },
          "cpu_percents": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Cpu Percents"
          }
        },
        "type": "object",
        "required": [
          "vm_id",
          "ts",
          "cpu_percents"
        ],
        "title": "CpuMeasurement",
        "description": "A single CPU measurement, with a list of CPU percents for each core"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InfoResponse": {
        "properties": {
          "git_commit": {
            "type": "string",
            "title": "Git Commit"
          },
          "git_branch": {
            "type": "string",
            "title": "Git Branch"
          },
          "git_is_dirty": {
            "type": "boolean",
            "title": "Git Is Dirty"
          },
          "deploy_time": {
            "type": "string",
            "format": "date-time",
            "title": "Deploy Time"
          }
        },
        "type": "object",
        "required": [
          "git_commit",
          "git_branch",
          "git_is_dirty",
          "deploy_time"
        ],
        "title": "InfoResponse"
      },
      "OkResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "default": "ok"
          }
        },
        "type": "object",
        "title": "OkResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}

