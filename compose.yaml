# Dynamically add an agent container that talks to the control plane:
# docker run -it --rm --network centrality_default --name centrality-vmagent3 centrality-vmagent1 python3.11 vmagent/vmagent/cli.py launch -f tests/configs/dockercompose/vmagent-auto.yaml --vm-id auto
services:
  vmagent-auto:
    build: .
    deploy:
      replicas: 2
    environment:
      - PYTHONUNBUFFERED=1
    working_dir: /centrality
    command: "python3.11 vmagent/vmagent/cli.py launch -f tests/configs/dockercompose/vmagent-auto.yaml --vm-id auto"
    depends_on:
      - controlplane

  vmagent-real-data:
    build: .
    environment:
      - PYTHONUNBUFFERED=1
    working_dir: /centrality
    command: "python3.11 vmagent/vmagent/cli.py launch -f tests/configs/dockercompose/vmagent-real-data.yaml"
    depends_on:
      - controlplane

  vmagent-many-cpus:
    build: .
    environment:
      - PYTHONUNBUFFERED=1
    working_dir: /centrality
    command: "python3.11 vmagent/vmagent/cli.py launch -f tests/configs/dockercompose/vmagent-many-cpus.yaml"
    depends_on:
      - controlplane

  controlplane:
    build: .
    ports:
      - "0.0.0.0:8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    working_dir: /centrality/controlplane
    command: "python3.11 controlplane/cli.py launch --postgres-host postgres"
    depends_on:
      - postgres

  rapidui:
    build: .
    ports:
      - "0.0.0.0:8501:8501"
    environment:
      - PYTHONUNBUFFERED=1
    working_dir: /centrality/rapidui
    command: "./launch.bash ../tests/configs/dockercompose/rapidui.yaml"
    depends_on:
      - controlplane

  postgres:
    image: "postgres:16.1"
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "0.0.0.0:5432:5432"